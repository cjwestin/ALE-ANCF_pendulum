function M = ALEANCF_massHHT(mass_per_unit_length,p1,p2,qe)

% Function to calculate mass matrix for an ALE-ANCF element
%
% INPUTS:
% mass_per_unit_length - cable linear density (kg/m)
% p1 - material coordinate of first element node
% p2 - material coordinate of second element node
% qe - vector of reduced generalized coordinates
%
% OUTPUTS:
% M - mass matrix
%

M = zeros(12,12);

%%
M(1:3,1:3) = ((13*p2)/35 - (13*p1)/35) * eye(3);
M(1:3,4:6) = (11*(p1 - p2)^2)/210 * eye(3);

M(1,7) = (11*qe(1))/35 - (11*qe(7))/35 + (17*p1*qe(4))/105 - (17*p2*qe(4))/105 - (11*p1*qe(10))/105 + (11*p2*qe(10))/105;
M(2,7) = (11*qe(2))/35 - (11*qe(8))/35 + (17*p1*qe(5))/105 - (17*p2*qe(5))/105 - (11*p1*qe(11))/105 + (11*p2*qe(11))/105;
M(3,7) = (11*qe(3))/35 - (11*qe(9))/35 + (17*p1*qe(6))/105 - (17*p2*qe(6))/105 - (11*p1*qe(12))/105 + (11*p2*qe(12))/105;

M(1:3,8:10) = (9*p2 - 9*p1)/70 * eye(3);
M(1:3,11:13) = -(13*(p1 - p2)^2)/420 * eye(3);

M(1,14) = (13*qe(1))/70 - (13*qe(7))/70 - (13*p1*qe(4))/210 + (13*p2*qe(4))/210 + (p1*qe(10))/210 - (p2*qe(10))/210;
M(2,14) = (13*qe(2))/70 - (13*qe(8))/70 - (13*p1*qe(5))/210 + (13*p2*qe(5))/210 + (p1*qe(11))/210 - (p2*qe(11))/210;
M(3,14) = (13*qe(3))/70 - (13*qe(9))/70 - (13*p1*qe(6))/210 + (13*p2*qe(6))/210 + (p1*qe(12))/210 - (p2*qe(12))/210;

%%
M(4:6,4:6) = -(p1 - p2)^3/105 * eye(3);

M(4,7) = -((p1 - p2)*(12*qe(1) - 12*qe(7) + 3*p1*qe(4) - 3*p2*qe(4) - 4*p1*qe(10) + 4*p2*qe(10)))/210;
M(5,7) = -((p1 - p2)*(12*qe(2) - 12*qe(8) + 3*p1*qe(5) - 3*p2*qe(5) - 4*p1*qe(11) + 4*p2*qe(11)))/210;
M(6,7) = -((p1 - p2)*(12*qe(3) - 12*qe(9) + 3*p1*qe(6) - 3*p2*qe(6) - 4*p1*qe(12) + 4*p2*qe(12)))/210;

M(4:6,8:10) = (13*(p1 - p2)^2)/420 * eye(3);
M(4:6,11:13) = (p1 - p2)^3/140  * eye(3);

M(4,14) = -((p1 - p2)*(18*qe(1) - 18*qe(7) - 6*p1*qe(4) + 6*p2*qe(4) + p1*qe(10) - p2*qe(10)))/420;
M(5,14) = -((p1 - p2)*(18*qe(2) - 18*qe(8) - 6*p1*qe(5) + 6*p2*qe(5) + p1*qe(11) - p2*qe(11)))/420;
M(6,14) = -((p1 - p2)*(18*qe(3) - 18*qe(9) - 6*p1*qe(6) + 6*p2*qe(6) + p1*qe(12) - p2*qe(12)))/420;

%%
M(7,7) = (8*qe(1)*qe(10))/35 - (6*qe(2)*qe(5))/35 - (6*qe(3)*qe(6))/35 - (6*qe(1)*qe(4))/35 + (6*qe(4)*qe(7))/35 + (8*qe(2)*qe(11))/35 + (6*qe(5)*qe(8))/35 + (8*qe(3)*qe(12))/35 + (6*qe(6)*qe(9))/35 - (8*qe(7)*qe(10))/35 - (8*qe(8)*qe(11))/35 - (8*qe(9)*qe(12))/35 - (11*p1*qe(4)^2)/105 - (11*p1*qe(5)^2)/105 + (11*p2*qe(4)^2)/105 - (11*p1*qe(6)^2)/105 + (11*p2*qe(5)^2)/105 + (11*p2*qe(6)^2)/105 - (4*p1*qe(10)^2)/105 - (4*p1*qe(11)^2)/105 + (4*p2*qe(10)^2)/105 - (4*p1*qe(12)^2)/105 + (4*p2*qe(11)^2)/105 + (4*p2*qe(12)^2)/105 - ((12*qe(1)^2)/35 - (24*qe(1)*qe(7))/35 + (12*qe(2)^2)/35 - (24*qe(2)*qe(8))/35 + (12*qe(3)^2)/35 - (24*qe(3)*qe(9))/35 + (12*qe(7)^2)/35 + (12*qe(8)^2)/35 + (12*qe(9)^2)/35)/(p1 - p2) + (2*p1*qe(4)*qe(10))/35 - (2*p2*qe(4)*qe(10))/35 + (2*p1*qe(5)*qe(11))/35 - (2*p2*qe(5)*qe(11))/35 + (2*p1*qe(6)*qe(12))/35 - (2*p2*qe(6)*qe(12))/35;
M(7,8) = (13*qe(1))/70 - (13*qe(7))/70 + (p1*qe(4))/210 - (p2*qe(4))/210 - (13*p1*qe(10))/210 + (13*p2*qe(10))/210;
M(7,9) = (13*qe(2))/70 - (13*qe(8))/70 + (p1*qe(5))/210 - (p2*qe(5))/210 - (13*p1*qe(11))/210 + (13*p2*qe(11))/210;
M(7,10) = (13*qe(3))/70 - (13*qe(9))/70 + (p1*qe(6))/210 - (p2*qe(6))/210 - (13*p1*qe(12))/210 + (13*p2*qe(12))/210;
M(7,11) = ((p1 - p2)*(18*qe(1) - 18*qe(7) + p1*qe(4) - p2*qe(4) - 6*p1*qe(10) + 6*p2*qe(10)))/420;
M(7,12) = ((p1 - p2)*(18*qe(2) - 18*qe(8) + p1*qe(5) - p2*qe(5) - 6*p1*qe(11) + 6*p2*qe(11)))/420;
M(7,13) = ((p1 - p2)*(18*qe(3) - 18*qe(9) + p1*qe(6) - p2*qe(6) - 6*p1*qe(12) + 6*p2*qe(12)))/420;
M(7,14) = (qe(1)*qe(4))/14 + (qe(2)*qe(5))/14 + (qe(3)*qe(6))/14 + (qe(1)*qe(10))/14 - (qe(4)*qe(7))/14 + (qe(2)*qe(11))/14 - (qe(5)*qe(8))/14 + (qe(3)*qe(12))/14 - (qe(6)*qe(9))/14 - (qe(7)*qe(10))/14 - (qe(8)*qe(11))/14 - (qe(9)*qe(12))/14 + (p1*qe(4)^2)/210 + (p1*qe(5)^2)/210 - (p2*qe(4)^2)/210 + (p1*qe(6)^2)/210 - (p2*qe(5)^2)/210 - (p2*qe(6)^2)/210 + (p1*qe(10)^2)/210 + (p1*qe(11)^2)/210 - (p2*qe(10)^2)/210 + (p1*qe(12)^2)/210 - (p2*qe(11)^2)/210 - (p2*qe(12)^2)/210 - ((9*qe(1)^2)/35 - (18*qe(1)*qe(7))/35 + (9*qe(2)^2)/35 - (18*qe(2)*qe(8))/35 + (9*qe(3)^2)/35 - (18*qe(3)*qe(9))/35 + (9*qe(7)^2)/35 + (9*qe(8)^2)/35 + (9*qe(9)^2)/35)/(p1 - p2) - (p1*qe(4)*qe(10))/42 + (p2*qe(4)*qe(10))/42 - (p1*qe(5)*qe(11))/42 + (p2*qe(5)*qe(11))/42 - (p1*qe(6)*qe(12))/42 + (p2*qe(6)*qe(12))/42;


%%
M(8:10,8:10) = ((13*p2)/35 - (13*p1)/35) * eye(3);
M(8:10,11:13) = -(11*(p1 - p2)^2)/210 * eye(3);

M(8,14) = (11*qe(1))/35 - (11*qe(7))/35 - (11*p1*qe(4))/105 + (11*p2*qe(4))/105 + (17*p1*qe(10))/105 - (17*p2*qe(10))/105;
M(9,14) = (11*qe(2))/35 - (11*qe(8))/35 - (11*p1*qe(5))/105 + (11*p2*qe(5))/105 + (17*p1*qe(11))/105 - (17*p2*qe(11))/105;
M(10,14) = (11*qe(3))/35 - (11*qe(9))/35 - (11*p1*qe(6))/105 + (11*p2*qe(6))/105 + (17*p1*qe(12))/105 - (17*p2*qe(12))/105;

%%
M(11:13,11:13) = -(p1 - p2)^3/105 * eye(3);

M(11,14) = ((p1 - p2)*(12*qe(1) - 12*qe(7) - 4*p1*qe(4) + 4*p2*qe(4) + 3*p1*qe(10) - 3*p2*qe(10)))/210;
M(12,14) = ((p1 - p2)*(12*qe(2) - 12*qe(8) - 4*p1*qe(5) + 4*p2*qe(5) + 3*p1*qe(11) - 3*p2*qe(11)))/210;
M(13,14) = ((p1 - p2)*(12*qe(3) - 12*qe(9) - 4*p1*qe(6) + 4*p2*qe(6) + 3*p1*qe(12) - 3*p2*qe(12)))/210;

%%
M(14,14) = (8*qe(1)*qe(4))/35 + (8*qe(2)*qe(5))/35 + (8*qe(3)*qe(6))/35 - (6*qe(1)*qe(10))/35 - (8*qe(4)*qe(7))/35 - (6*qe(2)*qe(11))/35 - (8*qe(5)*qe(8))/35 - (6*qe(3)*qe(12))/35 - (8*qe(6)*qe(9))/35 + (6*qe(7)*qe(10))/35 + (6*qe(8)*qe(11))/35 + (6*qe(9)*qe(12))/35 - (4*p1*qe(4)^2)/105 - (4*p1*qe(5)^2)/105 + (4*p2*qe(4)^2)/105 - (4*p1*qe(6)^2)/105 + (4*p2*qe(5)^2)/105 + (4*p2*qe(6)^2)/105 - (11*p1*qe(10)^2)/105 - (11*p1*qe(11)^2)/105 + (11*p2*qe(10)^2)/105 - (11*p1*qe(12)^2)/105 + (11*p2*qe(11)^2)/105 + (11*p2*qe(12)^2)/105 - ((12*qe(1)^2)/35 - (24*qe(1)*qe(7))/35 + (12*qe(2)^2)/35 - (24*qe(2)*qe(8))/35 + (12*qe(3)^2)/35 - (24*qe(3)*qe(9))/35 + (12*qe(7)^2)/35 + (12*qe(8)^2)/35 + (12*qe(9)^2)/35)/(p1 - p2) + (2*p1*qe(4)*qe(10))/35 - (2*p2*qe(4)*qe(10))/35 + (2*p1*qe(5)*qe(11))/35 - (2*p2*qe(5)*qe(11))/35 + (2*p1*qe(6)*qe(12))/35 - (2*p2*qe(6)*qe(12))/35;

%%
M = M+triu(M,1)'; %Make it symmetric
M = M*mass_per_unit_length;

end